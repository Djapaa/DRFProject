# Generated by Django 4.2.11 on 2024-03-22 14:42

import api.v1.composition.services
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Author',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Имя автора')),
            ],
        ),
        migrations.CreateModel(
            name='Composition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(blank=True, max_length=255)),
                ('title', models.CharField(max_length=255, verbose_name='Название произведения')),
                ('english_title', models.CharField(max_length=255, verbose_name='Название произведения на английском языке')),
                ('another_name_title', models.CharField(max_length=500, verbose_name='Другие названия')),
                ('year_of_creations', models.PositiveIntegerField(default=1980, verbose_name='Год выпуска произведения')),
                ('created', models.DateField(auto_now_add=True)),
                ('updated', models.DateField(auto_now=True)),
                ('description', models.TextField(blank=True, verbose_name='Описание произведения')),
                ('composition_image', models.ImageField(default='composition_image/default_composition_image.jpeg', upload_to=api.v1.composition.services.get_path_upload_title)),
                ('view', models.PositiveIntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='CompositionsAgeRating',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default=None, max_length=20, null=True, verbose_name='Название возростного рейтинга')),
            ],
        ),
        migrations.CreateModel(
            name='CompositionsStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, verbose_name='Название статуса')),
            ],
        ),
        migrations.CreateModel(
            name='CompositionsType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, verbose_name='Название типа')),
            ],
        ),
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Название жанра')),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Название Тега')),
            ],
        ),
        migrations.CreateModel(
            name='UserCompositionRelation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bookmark', models.PositiveSmallIntegerField(blank=True, choices=[(1, 'Читаю'), (2, 'Буду читать'), (3, 'Прочитано'), (4, 'Брошено'), (5, 'Отложенно')], null=True)),
                ('rating', models.PositiveSmallIntegerField(blank=True, choices=[(10, 'Шедевр'), (9, 'Отлично'), (8, 'Очень хорошо'), (7, 'Хорошо'), (6, 'Нормально'), (5, 'Сомнительно, но окей'), (4, 'Ну такое'), (3, 'Плохо'), (2, 'Очень плохо'), (1, 'Крайне плохо')], null=True)),
                ('composition', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='composition.composition')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user', 'composition')},
            },
        ),
        migrations.AddField(
            model_name='composition',
            name='age_rating',
            field=models.ForeignKey(blank=True, default=3, null=True, on_delete=django.db.models.deletion.SET_NULL, to='composition.compositionsagerating'),
        ),
        migrations.AddField(
            model_name='composition',
            name='author',
            field=models.ManyToManyField(blank=True, to='composition.author'),
        ),
        migrations.AddField(
            model_name='composition',
            name='genre',
            field=models.ManyToManyField(to='composition.genre'),
        ),
        migrations.AddField(
            model_name='composition',
            name='publishers',
            field=models.ManyToManyField(blank=True, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='composition',
            name='readers',
            field=models.ManyToManyField(related_name='ratings_and_bookmarks', through='composition.UserCompositionRelation', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='composition',
            name='status',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='composition.compositionsstatus'),
        ),
        migrations.AddField(
            model_name='composition',
            name='tag',
            field=models.ManyToManyField(to='composition.tag'),
        ),
        migrations.AddField(
            model_name='composition',
            name='type',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='composition.compositionstype'),
        ),
    ]
